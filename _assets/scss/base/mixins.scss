@mixin border-radius($radius) {
	-webkit-border-radius: $radius;
	-moz-border-radius: $radius;
	-ms-border-radius: $radius;
	-o-border-radius: $radius;
	border-radius: $radius;
}

@mixin box-shadow($posx, $posy, $blur, $color) {
	-webkit-box-shadow: $posx $posy $blur $color;
	-moz-box-shadow: $posx $posy $blur $color;
	-ms-box-shadow: $posx $posy $blur  $color;
	-o-box-shadow: $posx $posy $blur  $color;
	box-shadow: $posx $posy $blur $color;
}

@mixin transition($prop, $time) {
	-webkit-transition: #{$prop} #{$time};
	-moz-box-shadow: #{$prop} #{$time};
	-ms-box-shadow: #{$prop} #{$time};
	-o-transition: #{$prop} #{$time};
	transition: #{$prop} #{$time};
}

@mixin horizontal-gradient($color1, $color2) {
	background: $color1;
	background: -moz-linear-gradient(left,  $color1 0%, $color2 100%);
	background: -webkit-linear-gradient(left,  $color1 0%,$color2 100%);
	background: linear-gradient(to right,  $color1 0%,$color2 100%);
}

@mixin vertical-gradient($color1, $color2) {
	background: $color1;
	background: -moz-linear-gradient(top,  $color1 0%, $color2 100%);
	background: -webkit-linear-gradient(top,  $color1 0%,$color2 100%);
	background: linear-gradient(to bottom,  $color1 0%,$color2 100%);
}

@mixin vendor-prefix($name, $value) {
  @each $vendor in ('-webkit-', '-moz-', '-ms-', '-o-', '') {
    #{$vendor}#{$name}: #{$value};
  }
}

@mixin breakpoint($breakpoint) {
  // Retrieves the value from the key
  $value: map-get($breakpoints, $breakpoint);

  // If the key exists in the map
  @if $value != null {
    // Prints a media query based on the value
    @media (max-width: $value) {
      @content;
    }
  }

  // If the key doesn't exist in the map
  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Please make sure it is defined in `$breakpoints` map.";
  }
}